CREATE TABLE order_info
(
    id                    bigint comment '编号',
    consignee             varchar(100) comment '收货人',
    consignee_tel         varchar(20) comment '收件人电话',
    final_total_amount    decimal(16, 2) comment '总金额',
    order_status          varchar(20) comment '订单状态',
    user_id               bigint comment '用户id',
    delivery_address      varchar(1000) comment '送货地址',
    order_comment         varchar(200) comment '订单备注',
    out_trade_no          varchar(50) comment '订单交易编号（第三方支付用)',
    trade_body            varchar(200) comment '订单描述(第三方支付用)',
    create_time           TIMESTAMP comment '创建时间',
    operate_time          TIMESTAMP comment '操作时间',
    expire_time           TIMESTAMP comment '失效时间',
    tracking_no           varchar(100) comment '物流单编号',
    parent_order_id       bigint comment '父订单编号',
    img_url               varchar(200) comment '图片路径',
    province_id           int comment '地区',
    benefit_reduce_amount decimal(16, 2) comment '优惠金额',
    original_total_amount decimal(16, 2) comment '原价金额',
    feight_fee            decimal(16, 2) comment '运费',
    discount_rate AS final_total_amount / original_total_amount,
    primary key (id) not enforced
) WITH (
 'connector' = 'mysql-cdc',
 'hostname' = 'hadoop102',
 'port' = '3306',
 'username' = 'root',
 'password' = '000000',
 'database-name' = 'gmall2020',
 'table-name' = 'order_info'
);
CREATE TABLE order_detail
(
    id          bigint PRIMARY KEY NOT ENFORCED,
    order_id    bigint null comment '订单编号',
    sku_id      bigint null comment 'sku_id',
    sku_name    varchar(200) null comment 'sku名称（冗余)',
    img_url     varchar(200) null comment '图片名称（冗余)',
    order_price decimal(10, 2) null comment '购买价格(下单时sku价格）',
    sku_num     int null comment '购买个数',
    create_time TIMESTAMP null comment '创建时间',
    source_type varchar(20) null comment '来源类型',
    source_id   bigint null comment '来源编号',
    original_detail_amount AS order_price * sku_num,
    proctime AS PROCTIME()
) WITH (
 'connector' = 'mysql-cdc',
 'hostname' = 'hadoop102',
 'port' = '3306',
 'username' = 'root',
 'password' = '000000',
 'database-name' = 'gmall2020',
 'table-name' = 'order_detail'
);
CREATE TABLE hbase_sku_info
(
    rowkey bigint comment 'skuid(itemID)',
    cf ROW (
        price varchar (200),
        weight varchar (200),
        sku_name varchar (200),
        sku_desc varchar (2000),
        sku_default_img varchar (200),
        spu_id bigint,
        spu_name varchar (200),
        description varchar (1000),
        tm_id bigint,
        tm_name varchar (20),
        category3_id bigint,
        category3_name varchar (200) ,
        category2_id bigint,
        category2_name varchar (200) ,
        category1_id bigint,
        category1_name varchar (200) ,
        create_time TIMESTAMP (3)
        ),
    primary key (rowkey) not enforced
)WITH(
 'connector' = 'hbase-2.2',
 'table-name' = 'sku_info',
 'zookeeper.quorum' = 'hadoop102:2181'
);
CREATE TABLE kafka_order_detail
(
    id                    BIGINT NOT NULL,
    order_id              BIGINT,
    sku_id                BIGINT,
    province_id           INT,
    user_id               BIGINT,
    order_price           DECIMAL(10, 2),
    sku_num               INT,
    create_time           TIMESTAMP(3),
    source_type           VARCHAR(20),
    source_id             BIGINT,
    consignee             VARCHAR(100),
    consignee_tel         VARCHAR(20),
    final_detail_amount   DECIMAL(10, 2),
    final_total_amount    DECIMAL(16, 2),
    order_status          VARCHAR(20),
    delivery_address      VARCHAR(1000),
    order_comment         VARCHAR(200),
    out_trade_no          VARCHAR(50),
    trade_body            VARCHAR(200),
    operate_time          TIMESTAMP(3),
    expire_time           TIMESTAMP(3),
    tracking_no           VARCHAR(100),
    parent_order_id       BIGINT,
    benefit_reduce_amount DECIMAL(16, 2),
    original_total_amount DECIMAL(16, 2),
    feight_fee            DECIMAL(16, 2),
    price                 VARCHAR(200),
    weight                VARCHAR(200),
    sku_name              VARCHAR(200),
    sku_desc              VARCHAR(2000),
    sku_default_img       VARCHAR(200),
    spu_id                BIGINT,
    spu_name              VARCHAR(200),
    description           VARCHAR(1000),
    tm_id                 BIGINT,
    tm_name               VARCHAR(20),
    category3_id          BIGINT,
    category3_name        VARCHAR(200),
    category2_id          BIGINT,
    category2_name        VARCHAR(200),
    category1_id          BIGINT,
    category1_name        VARCHAR(200),
    sku_create_time       TIMESTAMP(3),
    primary key (id) not enforced
)WITH(
 'connector' = 'upsert-kafka',
  'topic' = 'dwd_order_detail',
  'properties.bootstrap.servers' = 'hadoop102:9092',
  'key.format' = 'json',
  'value.format' = 'json'
);

INSERT INTO kafka_order_detail
SELECT d.id,
       d.order_id,
       s.rowkey                                                             sku_id,
       o.province_id,
       o.user_id,
       d.order_price,
       d.sku_num,
       d.create_time,
       d.source_type,
       d.source_id,
       o.consignee,
       o.consignee_tel,
       CAST((d.original_detail_amount * o.discount_rate) AS DECIMAL(10, 2)) final_detail_amount,
       o.final_total_amount,
       o.order_status,
       o.delivery_address,
       o.order_comment,
       o.out_trade_no,
       o.trade_body,
       o.operate_time,
       o.expire_time,
       o.tracking_no,
       o.parent_order_id,
       o.benefit_reduce_amount,
       o.original_total_amount,
       o.feight_fee,
       s.cf.price,
       s.cf.weight,
       s.cf.sku_name,
       s.cf.sku_desc,
       s.cf.sku_default_img,
       s.cf.spu_id,
       s.cf.spu_name,
       s.cf.description,
       s.cf.tm_id,
       s.cf.tm_name,
       s.cf.category3_id,
       s.cf.category3_name,
       s.cf.category2_id,
       s.cf.category2_name,
       s.cf.category1_id,
       s.cf.category1_name,
       s.cf.create_time                                                     sku_create_time
FROM order_detail d
         LEFT JOIN order_info o on d.order_id = o.id
         LEFT JOIN hbase_sku_info FOR SYSTEM_TIME AS OF d.proctime AS s
ON s.rowkey = d.sku_id;

